import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

public class CustomSet<E> {
    private final List<E> elements;

    public CustomSet() {
        elements = new ArrayList<>();
    }

    public CustomSet(Collection<? extends E> collection) {
        this();
        for (E element : collection) {
            add(element);
        }
    }

    public void add(E element) {
        if (!contains(element)) {
            elements.add(element);
        }
    }

    public boolean remove(E element) {
        return elements.remove(element);
    }

    public boolean contains(E element) {
        return elements.contains(element);
    }

    public int size() {
        return elements.size();
    }

    public boolean isEmpty() {
        return elements.isEmpty();
    }

    public CustomSet<E> union(CustomSet<E> other) {
        CustomSet<E> unionSet = new CustomSet<>(this.elements);
        for (E element : other.elements) {
            unionSet.add(element);
        }
        return unionSet;
    }

    public CustomSet<E> intersection(CustomSet<E> other) {
        CustomSet<E> intersectionSet = new CustomSet<>();
        for (E element : this.elements) {
            if (other.contains(element)) {
                intersectionSet.add(element);
            }
        }
        return intersectionSet;
    }

    public CustomSet<E> difference(CustomSet<E> other) {
        CustomSet<E> differenceSet = new CustomSet<>();
        for (E element : this.elements) {
            if (!other.contains(element)) {
                differenceSet.add(element);
            }
        }
        return differenceSet;
    }

    public boolean isSubset(CustomSet<E> other) {
        for (E element : other.elements) {
            if (!this.contains(element)) {
                return false;
            }
        }
        return true;
    }

    @Override
    public String toString() {
        return elements.toString();
    }

    public static void main(String[] args) {
        CustomSet<String> set1 = new CustomSet<>();
        set1.add("Java");
        set1.add("Python");
        set1.add("C++");

        CustomSet<String> set2 = new CustomSet<>();
        set2.add("Java");
        set2.add("JavaScript");

        System.out.println("Объединение: " + set1.union(set2));
        System.out.println("Пересечение: " + set1.intersection(set2));
        System.out.println("Разность: " + set1.difference(set2));
        System.out.println("Подмножество: " + set2.isSubset(set1));
    }
}
